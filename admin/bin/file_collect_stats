#!/usr/bin/php
<?php
//boot up to openlss
require(__DIR__.'/boot.php');

use \Vidcache\Admin\File;
use \Vidcache\Admin\Node;
use \Vidcache\Server as VidcacheServer;

dolog('Starting cluster wide file stat collection');

$vc = VidcacheServer::load();
//obtain current stats from all nodes
$bulkstats = array();
foreach(Node::fetchAll() as $node){
	$hn = $node['hostname'];
	dolog('Collecting bulk stats from node: '.$node['hostname']);
	try {
		$bulkstats[$hn] = $vc->setNode($hn)->fileStatsGetBulk();
	} catch(Exception $e){
		continue;
	}
	if(!isset($bulkstats[$hn]['bulk_stats']) || !count($bulkstats[$hn]['bulk_stats'])){
		dolog('No bulk stats received for node: '.$hn,LOG_NOTICE);
		continue;
	}
}
foreach(File::fetchAll() as $file){
	dolog('Processing stats for file: '.$file['chksum']);
	foreach(array_keys($bulkstats) as $hn){
		$vc->setNode($hn);
		$stats =& $bulkstats[$hn]['bulk_stats'];
		if(!array_key_exists($file['chksum'],$stats)) continue;
		foreach($stats[$file['chksum']] as $file_stat){
			dolog('Storing stats for: '.print_r($file_stat,true));
			$check = File::statsCheckPeriod(
				 $file['file_id']
				,$file_stat['client_id']
				,time()
			);
			//create a new period if we need to
			if($check === false){
				$rv = File::statsCreatePeriod($file['file_id'],$file_stat['client_id']);
				if($rv === false){
					dolog('Could not create period for file: '.$file['chksum'],LOG_NOTICE);
					continue;
				}
			}
			$rv = File::statsAdd($file['file_id'],$file_stat['client_id'],$file_stat['hits'],$file_stat['bytes']);
			if($rv === false){
				dolog('Could not add stats for file: '.$file['chksum'],LOG_NOTICE);
				continue;
			}
			//if everything was successful clear the buckets
			try {
				$vc->fileStatsClear($file['chksum'],$file_stat['client_id']);
			} catch(Exception $e){
				dolog('Could not clear file stats for: '.$file['chksum'].' '.$file_stat['client_id'].' '.$e->getMessage(),LOG_NOTICE);
				continue;
			}
			//just to notate the end of the loop
			continue;
		}
	}
}
dolog('File stat collection complete');
