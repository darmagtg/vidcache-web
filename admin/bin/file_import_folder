#!/usr/bin/php
<?php
require(__DIR__.'/boot.php');
use \Vidcache\Admin\Client;
use \Vidcache\Admin\Client\File as ClientFile;
use \Vidcache\Admin\Client\Folder as ClientFolder;

//this script will add a file to a clients account
//	requires the following arguments
//	--client_id -- client_id to add to
//	--client_folder_id -- client folder to upload to
//	--path -- path to collect files within

$opts = getopt('pa',array('pretend','client_id:','client_folder_id:','path:'));
//figure out if we are pretending (dry-run)
$pretend = false;
if(array_key_exists('p',$opts) || array_key_exists('pretend',$opts)){
	$pretend = true;
	$pretend_folder_id = ClientFolder::max();
	$pretend_file_id = ClientFile::max();
	dolog('Pretend import run starting',LOG_INFO);
}
//set $allfiles flag to not ignore dotfiles
$allfiles = false;
if(array_key_exists('a',$opts)){
	$allfiles = true;
}
//validate destination folder
if(!array_key_exists('client_folder_id',$opts)){
	dolog('Client Folder ID not specified, please use the --client_folder_id=<x> option and try again',LOG_ERROR);
	exit;
}
$client_folder = ClientFolder::fetch($opts['client_folder_id']);
if(!$client_folder){
	dolog('Client folder ['.$opts['client_folder_id'].'] does not exist',LOG_ERROR);
	exit;
}
//validate client
if(!array_key_exists('client_id',$opts)){
	if(is_numeric(mda_get($client_folder,'client_id'))){
		dolog('Client ID not specified, inferring [--client_id='.$client_folder['client_id'].'] based on owner of provided client_folder_id',LOG_WARN);
		$opts['client_id'] = $client_folder['client_id'];
	} else {
		dolog('Client ID not specified, please use the --client_id=<x> option and try again',LOG_ERROR);
		exit;
	}
}
$client = Client::fetch($opts['client_id']);
if(!$client){
	dolog('Client ['.$opts['client_id'].'] does not exist',LOG_ERROR);
	exit;
}
//check source path
if(!array_key_exists('path',$opts)){
	dolog('Path not specified, assuming [--path=.]',LOG_WARN);
	$opts['path'] = '.';
}
$srcpath = realpath($opts['path']);
if(!is_dir($srcpath)){
	dolog('Import path ['.$srcpath.'] is not a directory',LOG_ERROR);
	exit;
}
$srcprefix = $srcpath.'/';
//build destination path string
$dstpath = '';
foreach(ClientFolder::path($opts['client_id'],$opts['client_folder_id']) as $p)
	$dstpath .= $p['name'].'/';
$dstpath = preg_replace('/^Root\//','/',$dstpath);
$dstpath .= basename($srcpath);
$dstprefix = $client['company'].'::'.$dstpath.'/';

//process the path and upload each file while creating folders as needed
dolog('Importing ['.$srcprefix.'*] to ['.$dstprefix.']',LOG_INFO);
$count = 0;
//$paths indexes source paths to ClientFolder IDs
$paths = array($srcpath=>$client_folder['client_folder_id']);
//$folders holds a local cache of ClientFolder data, indexed by id
$folders = array($client_folder['client_folder_id']=>$client_folder);
while(count($paths) > 0){
	reset($paths);
	list($path,$folderid) = each($paths);
	unset($paths[$path]);
	$folder = $folders[$folderid];
	foreach(scandir($path) as $file){
		if(in_array($file,array('.','..'))) continue;
		if((!$allfiles) && (substr($file,0,1) === '.')) continue;
		$fqfn = $path.'/'.$file;
		$stubfn = str_replace($srcpath.'/','',$fqfn);
		if(!is_readable($fqfn)){
			dolog('Couldnt open '.$fqfn,LOG_WARN);
			continue;
		}
		if(is_dir($fqfn)){
			if($pretend){
				$tmpid = ++$pretend_folder_id.'P';
				$paths[$fqfn] = $tmpid;
				$tmpfolder = ClientFolder::createParams();
				$tmpfolder['client_folder_id']			= $tmpid;
				$tmpfolder['parent_client_folder_id']	= $folder['client_folder_id'];
				$tmpfolder['client_id']					= $client['client_id'];
				$tmpfolder['name']						= basename($fqfn);
				$tmpfolder['_stubname']					= $dstpath.'/'.$stubfn;
				$folders[$tmpid] = $tmpfolder;
				unset($tmpfolder);
			} else {
				//make the folder in vidcache, set ptrs and cache like above
			}
			continue;
		}
		if(!$pretend){
			//setup tmp file
			$tmp_file = tempnam(sys_get_temp_dir(),'vc_');

			//copy to temp file
			copy($file,$tmp_file);
			chmod($tmp_file,0664);
		}

		//have the system upload the file
		try {
			if($pretend){
				$client_file_id = ++$pretend_file_id.'P';
			} else {
				$client_file_id = ClientFile::upload(
					 $client['client_id']
					,$folder['client_folder_id']
					,$tmp_file
					,basename($file)
					,$staging_path
				);
			}
			dolog('[client_file_id '.sprintf('% 8d',$client_file_id).'] "'.$srcprefix.$stubfn.'" -> "'.$dstprefix.$stubfn.'"');
			$count++;
		} catch(Exception $e){
			dolog('Failed to import file: '.$e->getMessage(),LOG_WARN);
		}
		if(!$pretend){
			if(file_exists($tmp_file)) unlink($tmp_file);
			if(file_exists($staging_path)) unlink($staging_path);
		}
	}
}
dolog('Processed '.$count.' files');
