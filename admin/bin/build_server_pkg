#!/bin/bash

# use a different branch if specified
if [ ! -z $1 ]; then
	BRANCH="$1"
else
	BRANCH="stable"
fi

# this script will build a tarball for use upgrading nodes
function init {
	echo -n "Starting VidCache scripting system..."

	#check for root
	if [[ $USER != "root" ]]; then
		echo
		echo "Must be run as root! (try sudo)"
		exit 1
	fi

	#get prefix and path stuff
	if [ "$(dpkg -l | grep realpath | wc -l)" -eq 0 ]; then
		aptitude -q -y install realpath >/dev/null 2>&1
	fi
	SCRIPT=$(realpath $0)
	SCRIPTPATH=$(dirname $SCRIPT)

	#load prefix info
	. $SCRIPTPATH/prefix.sh
	#load common
	. $SCRIPTPATH/common.sh
	cd $VC_ROOT
	echo "done"
}

#def some vars
VERSION=
TMPDIR=/tmp/vcsbp

function prep {
	echo -n "Creating temp folder... "
	rm -rf $TMPDIR
	mkdir $TMPDIR
	cd $TMPDIR
	echo "done"
}

function download_src {
	echo "Obtaining updated source"
	echo "Using branch: $BRANCH"
	git clone -b $BRANCH git@github.com:eSited/vidcache.git vidcache

	if [ $? -gt 0 ]; then
		echo "Error: could not obtain source"
		exit 1
	fi
}

function show_version {
	VERSION="$(cat vidcache/server/src/version)"
	echo "Server Version: $VERSION"
}

function prep_src {
	echo -n "Preparing source... "
	mv vidcache/server vidcache/server-$VERSION
	echo "done"
}

function build_src {
	echo -n "Building Tarball... "
	cd vidcache/server-$VERSION
	tar czf ../../server-$VERSION.tar.gz .
	cd ../..
	echo "done"
}

function finalize {
	echo -n "Moving tarball to servable location... "
	cp server-$VERSION.tar.gz $VC_ROOT
	cd $VC_ROOT
	rm -f server-latest.tar.gz
	ln -s server-$VERSION.tar.gz server-latest.tar.gz
	chown $SUDO_USER:$SUDO_GROUP server-* server-latest.tar.gz
	echo "done"
}

function cleanup {
	echo -n "Cleaning up... "
	rm -rf $TMPDIR
	echo "done"
}

#controller
init
show_banner
echo "Starting to build server package"
prep
echo
download_src
echo
show_version
echo
prep_src
build_src
finalize
cleanup
echo
echo "Build complete"
